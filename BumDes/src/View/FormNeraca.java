/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Kelas.Barang;
import Kelas.Trans;
import Koneksi.Koneksi;
import Kontrol.AkunKontrol;
import Kontrol.BarangKontrol;
import Kontrol.TransKontrol;
import java.sql.Connection;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author damaikurnia
 */
public class FormNeraca extends javax.swing.JFrame {

    /**
     * Creates new form FormAir
     */
    public FormNeraca() {

        initComponents();
        this.setLocationRelativeTo(null);
//        setExtendedState(this.getExtendedState() | JFrame.MAXIMIZED_BOTH);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jColorChooser1 = new javax.swing.JColorChooser();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        date_awal = new com.toedter.calendar.JDateChooser();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        date_sampai = new com.toedter.calendar.JDateChooser();
        button_cetak = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("NERACA");
        jLabel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        date_awal.setDateFormatString("dd-MM-yyyy");

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel1.setText("S.D");

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel2.setText("TGL AWAL");

        date_sampai.setDateFormatString("dd-MM-yyyy");

        button_cetak.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        button_cetak.setText("TAMPILKAN NERACA");
        button_cetak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_cetakActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 402, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(button_cetak, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(26, 26, 26)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(date_sampai, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(date_awal, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel3)
                .addGap(59, 59, 59)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(date_awal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(date_sampai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(42, 42, 42)
                .addComponent(button_cetak, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void button_cetakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_cetakActionPerformed
        cekAkumulasi();
        cetakLaporan();
    }//GEN-LAST:event_button_cetakActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormNeraca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormNeraca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormNeraca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormNeraca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormNeraca().setVisible(true);
            }
        });
    }

    public void cekAkumulasi() {
        try {
            List<Barang> bar = BarangKontrol.getKoneksi().cariBarangAkumulasi();
            if (bar.size() > 0) {
//                JOptionPane.showMessageDialog(null, "Akumulasi");
                for (int i = 0; i < bar.size(); i++) {
                    double totalAset = bar.get(i).getTotalAset();
                    String tanggalAkumulasi = bar.get(i).getTanggalPenyusutan();
                    int jangkawaktu = bar.get(i).getJangkawaktu();

                    double penyusutan = totalAset / jangkawaktu;
                    double newTotalAset = totalAset - penyusutan;
                    int newjangkawaktu = jangkawaktu - 1;
                    int tahun = Integer.parseInt(tanggalAkumulasi.split("-")[0]);
                    tahun = tahun + 1;
                    String newtanggalAkumulasi = Integer.toString(tahun) + "-" + tanggalAkumulasi.split("-")[1] + "-" + tanggalAkumulasi.split("-")[2];

                    JOptionPane.showMessageDialog(null, "Ada barang yang terakumulasi, dengan perincian : \n"
                            + "Nama Barang : " + bar.get(i).getNamaBarang() + "\n"
                            + "Total Aset      : " + Double.toString(totalAset).split("\\.")[0] + " --> " + Double.toString(newTotalAset).split("\\.")[0] + "\n"
                            + "Tanggal Peny : " + tanggalAkumulasi + " --> " + newtanggalAkumulasi + "\n"
                            + "Sisa Tahun     : " + Integer.toString(jangkawaktu) + " Tahun --> " + Integer.toString(newjangkawaktu) + " Tahun");

                    Trans akumulasi = new Trans("1.2.2.1", 0, (long) penyusutan);
                    Trans modal = new Trans("3.1.1", 0, (long) penyusutan);
                    TransKontrol.getKoneksi().insertTransaksi(akumulasi);
                    TransKontrol.getKoneksi().insertTransaksi(modal);

                    //update barang di tabel barang
                    Barang barang = bar.get(i);
                    barang.setTotalAset(newTotalAset);
                    barang.setTanggalPenyusutan(newtanggalAkumulasi);
                    barang.setJangkawaktu(newjangkawaktu);
                    BarangKontrol.getKoneksi().updateBarangAkumulasi(barang);
                }
            } else {
//                JOptionPane.showMessageDialog(null, "NONONO");
            }
        } catch (SQLException ex) {
            Logger.getLogger(FormNeraca.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public double labakotor() {
        double total = 0;
        try {
            String tglDari = new SimpleDateFormat("yyyy-MM-dd").format(date_awal.getDate());
            String tglSampai = new SimpleDateFormat("yyyy-MM-dd").format(date_sampai.getDate());
            double pend = TransKontrol.getKoneksi().lr_pend(tglDari, tglSampai);
            double beban = TransKontrol.getKoneksi().lr_beban(tglDari, tglSampai);
            total = pend - beban;
        } catch (SQLException ex) {
            Logger.getLogger(FormNeraca.class.getName()).log(Level.SEVERE, null, ex);
        }
        return total;
    }

    public double pajak(double labakotor) {
        double pajak = 0;
        try {
            int persen = AkunKontrol.getKoneksi().persenPajak();
            pajak = labakotor * ((double) persen / (double) 100);
        } catch (SQLException ex) {
            Logger.getLogger(FormNeraca.class.getName()).log(Level.SEVERE, null, ex);
        }
        return pajak;
    }

    public double lababersih(double labakotor, double pajak) {
        return labakotor - pajak;
    }

    public double shu_shu(double labakotor, double lababersih, double pajak) {
        double shu = 0;
        try {
            String tglDari = new SimpleDateFormat("yyyy-MM-dd").format(date_awal.getDate());
            String tglSampai = new SimpleDateFormat("yyyy-MM-dd").format(date_sampai.getDate());
            double totalSHu = TransKontrol.getKoneksi().selectshu(lababersih);
            shu = labakotor - (totalSHu + pajak);

        } catch (SQLException ex) {
            Logger.getLogger(FormNeraca.class.getName()).log(Level.SEVERE, null, ex);
        }
        return shu;
    }

    public double shu_total(double lababersih, double pajak, double shu_shu) {
        double shu = 0;
        try {
            String tglDari = new SimpleDateFormat("yyyy-MM-dd").format(date_awal.getDate());
            String tglSampai = new SimpleDateFormat("yyyy-MM-dd").format(date_sampai.getDate());
            double modal = TransKontrol.getKoneksi().selectModal(tglDari, tglSampai);
            double totalSHu = TransKontrol.getKoneksi().selectshu(lababersih);
            shu = modal + totalSHu + pajak + shu_shu;

        } catch (SQLException ex) {
            Logger.getLogger(FormNeraca.class.getName()).log(Level.SEVERE, null, ex);
        }
        return shu;
    }

    public double totalAktiva() {
        double totalAktiva = 0;
        try {
            String tglDari = new SimpleDateFormat("yyyy-MM-dd").format(date_awal.getDate());
            String tglSampai = new SimpleDateFormat("yyyy-MM-dd").format(date_sampai.getDate());
            double aktivaLancar = TransKontrol.getKoneksi().selectAktivaLancar(tglDari, tglSampai);
            double kas = TransKontrol.getKoneksi().selectAktivaLancar_kas(tglDari, tglSampai);
            aktivaLancar = kas + aktivaLancar;
            double aktivaTetap = TransKontrol.getKoneksi().selectAktivaTetap(tglDari, tglSampai);
            totalAktiva = aktivaLancar + aktivaTetap;
        } catch (SQLException ex) {
            Logger.getLogger(FormNeraca.class.getName()).log(Level.SEVERE, null, ex);
        }
        return totalAktiva;
    }

    public double totalPasiva(double shu_total) {
        double totalPasiva = 0;
        try {
            String tglDari = new SimpleDateFormat("yyyy-MM-dd").format(date_awal.getDate());
            String tglSampai = new SimpleDateFormat("yyyy-MM-dd").format(date_sampai.getDate());
            double modal = shu_total;
            double kewajibanLancar = TransKontrol.getKoneksi().selectKewajibanLancar(tglDari, tglSampai);
            double kewajibanTetap = TransKontrol.getKoneksi().selectKewajibanTetap(tglDari, tglSampai);
            totalPasiva = modal + kewajibanLancar + kewajibanTetap;
        } catch (SQLException ex) {
            Logger.getLogger(FormNeraca.class.getName()).log(Level.SEVERE, null, ex);
        }
        return totalPasiva;
    }

    public double aktivaLancar_kas() {
        double kas = 0;
        try {
            String tglDari = new SimpleDateFormat("yyyy-MM-dd").format(date_awal.getDate());
            String tglSampai = new SimpleDateFormat("yyyy-MM-dd").format(date_sampai.getDate());
            kas = TransKontrol.getKoneksi().selectAktivaLancar_kas(tglDari, tglSampai);
            kas = kas - TransKontrol.getKoneksi().selectAktivaLancar_pendAir(tglDari, tglSampai);
//            kas = kas + TransKontrol.getKoneksi().selectAktivaLancar_pendAir(tglDari, tglSampai);
        } catch (SQLException ex) {
            Logger.getLogger(FormNeraca.class.getName()).log(Level.SEVERE, null, ex);
        }
        return kas;
    }

    public void cetakLaporan() {
        String tglDari = new SimpleDateFormat("yyyy-MM-dd").format(date_awal.getDate());
        String tglSampai = new SimpleDateFormat("yyyy-MM-dd").format(date_sampai.getDate());
        double labakotor = labakotor();
        double pajak = pajak(labakotor);
        double lababersih = lababersih(labakotor, pajak);
        double shu_shu = shu_shu(labakotor, lababersih, pajak);
        double shu_total = shu_total(lababersih, pajak,shu_shu);
        long total_aktiva = (long) totalAktiva();
        double kas = aktivaLancar_kas();

        long total_pasiva = (long) totalPasiva(shu_total);

        Connection kon = new Koneksi().getConnection();
        String reportSource = "./src/Lap/NERACA.jasper";
        Map<String, Object> params = new HashMap<String, Object>();
        params.put("tglDari", tglDari);
        params.put("tglSampai", tglSampai);
        params.put("shu_lababersih", Double.toString(lababersih).split("\\.")[0]);
        params.put("shu_pajak", Double.toString(pajak).split("\\.")[0]);
        params.put("shu_total", Double.toString(shu_total).split("\\.")[0]);
        params.put("total_aktiva", Long.toString(total_aktiva).split("\\.")[0]);
        params.put("total_pasiva", Long.toString(total_pasiva).split("\\.")[0]);
        params.put("aktivalancar_kas", Long.toString((long) aktivaLancar_kas()).split("\\.")[0]);
        params.put("shu_shu", Long.toString((long) shu_shu).split("\\.")[0]);
        try {
            JasperPrint jasperPrint = JasperFillManager.fillReport(reportSource, params, kon);
            JasperViewer.viewReport(jasperPrint, false);

        } catch (JRException ex) {
            ex.printStackTrace();
        }
    }

    public void catatan() {
//    AKUMULASI (dilakukan setelah lewat dari tahun di barang);
//        cara hitungnya = totalaset/tahunsisa;
//        peralatan kantor = total aset - akumulasi;
//                1. update tabel barang (tahun sisa -1, dan lakukan sampai tahun sisa = 0);

//        cara menampilkan akumulasi;
//        di neraca : cek tanggal hari ini lebih besar dari tahun akumulasi tiap barang;
//        jika ya -> akumulasikan;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton button_cetak;
    private com.toedter.calendar.JDateChooser date_awal;
    private com.toedter.calendar.JDateChooser date_sampai;
    private javax.swing.JColorChooser jColorChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    // End of variables declaration//GEN-END:variables
}
